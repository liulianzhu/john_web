<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
  version="2.0">
    
  <description>JSTL 1.1 functions library</description>
  <display-name>JSTL functions</display-name>
  <tlib-version>1.1</tlib-version>
  <short-name>fn</short-name>
  <uri>http://java.sun.com/jsp/jstl/functions</uri>

  <function>
    <description>
      Tests if an input string contains the specified substring.
    </description>
    <name>contains</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>boolean contains(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;c:if test="${fn:contains(name, searchString)}">
    </example>
  </function>

  <function>
    <description>
      Tests if an input string contains the specified substring in a case insensitive way.
    </description>
    <name>containsIgnoreCase</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>boolean containsIgnoreCase(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;c:if test="${fn:containsIgnoreCase(name, searchString)}">
    </example>
  </function>

  <function>
    <description>
      Tests if an input string ends with the specified suffix.
    </description>
    <name>endsWith</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>boolean endsWith(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;c:if test="${fn:endsWith(filename, ".txt")}">
    </example>
  </function>

  <function>
    <description>
      Escapes characters that could be interpreted as XML markup.
    </description>
    <name>escapeXml</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String escapeXml(java.lang.String)</function-signature>
    <example>
      ${fn:escapeXml(param:info)}
    </example>
  </function>

  <function>
    <description>
      Returns the index withing a string of the first occurrence of a specified substring.
    </description>
    <name>indexOf</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>int indexOf(java.lang.String, java.lang.String)</function-signature>
    <example>
      ${fn:indexOf(name, "-")}
    </example>
  </function>

  <function>
    <description>
      Joins all elements of an array into a string.
    </description>
    <name>join</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String join(java.lang.String[], java.lang.String)</function-signature>
    <example>
      ${fn:join(array, ";")}
    </example>
  </function>

  <function>
    <description>
      Returns the number of items in a collection, or the number of characters in a string.
    </description>
    <name>length</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>int length(java.lang.Object)</function-signature>
    <example>
      You have ${fn:length(shoppingCart.products)} in your shopping cart.
    </example>
  </function>

  <function>
    <description>
      Returns a string resulting from replacing in an input string all occurrences
      of a "before" string into an "after" substring.
    </description>
    <name>replace</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)</function-signature>
    <example>
      ${fn:replace(text, "-", "&#149;")}
    </example>
  </function>

  <function>
    <description>
      Splits a string into an array of substrings.
    </description>
    <name>split</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String[] split(java.lang.String, java.lang.String)</function-signature>
    <example>
      ${fn:split(customerNames, ";")}
    </example>
  </function>

  <function>
    <description>
      Tests if an input string starts with the specified prefix.
    </description>
    <name>startsWith</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>boolean startsWith(java.lang.String, java.lang.String)</function-signature>
    <example>
      &lt;c:if test="${fn:startsWith(product.id, "100-")}">
    </example>
  </function>

  <function>
    <description>
      Returns a subset of a string.
    </description>
    <name>substring</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String substring(java.lang.String, int, int)</function-signature>
    <example>
      P.O. Box: ${fn:substring(zip, 6, -1)}
    </example>
  </function>

  <function>
    <description>
      Returns a subset of a string following a specific substring.
    </description>
    <name>substringAfter</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String substringAfter(java.lang.String, java.lang.String)</function-signature>
    <example>
      P.O. Box: ${fn:substringAfter(zip, "-")}
    </example>
  </function>

  <function>
    <description>
      Returns a subset of a string before a specific substring.
    </description>
    <name>substringBefore</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String substringBefore(java.lang.String, java.lang.String)</function-signature>
    <example>
      Zip (without P.O. Box): ${fn:substringBefore(zip, "-")}
    </example>
  </function>

  <function>
    <description>
      Converts all of the characters of a string to lower case.
    </description>
    <name>toLowerCase</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String toLowerCase(java.lang.String)</function-signature>
    <example>
      Product name: ${fn.toLowerCase(product.name)}
    </example>
  </function>

  <function>
    <description>
      Converts all of the characters of a string to upper case.
    </description>
    <name>toUpperCase</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String toUpperCase(java.lang.String)</function-signature>
    <example>
      Product name: ${fn.UpperCase(product.name)}
    </example>
  </function>

  <function>
    <description>
      Removes white spaces from both ends of a string.
    </description>
    <name>trim</name>
    <function-class>org.apache.taglibs.standard.functions.Functions</function-class>
    <function-signature>java.lang.String trim(java.lang.String)</function-signature>
    <example>
      Name: ${fn.trim(name)}
    </example>  
  </function>
  <function>
  <description>
      get currernt Date
    </description>
    <name>getYear</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getYear()</function-signature>
    <example>
      Year is : ${fn.getYear()}
    </example>  
  </function>
  
  <function>
    <description>
      get currernt Date
    </description>
    <name>getToday</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getToday()</function-signature>
    <example>
      Today is : ${fn.getToday()}
    </example>  
  </function>
  
  <function>
    <description>
      get currernt week
    </description>
    <name>getWeekDay</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getWeekDay()</function-signature>
    <example>
      Today is : ${fn.getWeekDay()}
    </example>  
  </function>
  
  <function>
    <description>
      get currernt week
    </description>
    <name>getSpWeekDay</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getSpWeekDay()</function-signature>
    <example>
      Today is : ${fn.getSpWeekDay()}
    </example>  
  </function>
  
  <function>
    <description>
      get currernt time
    </description>
    <name>getTimeNow</name>
    <function-class>com.lt.common.util.EmsDate</function-class>
    <function-signature>java.lang.String getTimeNow()</function-signature>
    <example>
      Now is : ${fn.getTimeNow()}
    </example>
  </function>
  <function>
    <description>
      get Collection length
    </description>
    <name>getLength</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.Integer getLength(java.util.Collection)</function-signature>
    <example>
      list length is getLength(c)
    </example>  
  </function>
  <function>
    <description>
      Convert to Chinese
    </description>
    <name>toChinese</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getStr(java.lang.String)</function-signature>
    <example>
      name : ${fn:toChinese(s)}
    </example>  
  </function>
  <function>
    <description>
      truncate text and return a new string.
      truncateText("abcdef",2)="ab...";
    </description>
    <name>truncateText</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String truncateText(java.lang.String,java.lang.Integer)</function-signature>
    <example>
      {fn:truncateText("abcdef",2)}
    </example>  
  </function>
   <function>
    <description>
    获取计划与实际比较字符串      
    </description>
    <name>getPlanFact</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getPlanFact(java.lang.String,java.lang.String,java.lang.Double)</function-signature>
    <example>
      {fn:getPlanFact(String s,String e,Double fact)}
    </example>  
  </function>
   <function>
    <description>
    比较两个时间大小(2参数均为时间字符串)      
    </description>
    <name>minuteDiff</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String minuteDiff(java.lang.String,java.lang.String)</function-signature>
    <example>
      {fn:minuteDiff(String s,String e)}
    </example>  
  </function>
  <function>
    <description>
    返回数字所对应的键盘编码   
    </description>
    <name>getBackCode</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getBackCode(Integer num)</function-signature>
    <example>
      {fn:getBackCode(Integer num)}
    </example>  
  </function>
   <function>
    <description>
    获取当前时间,不带毫秒数
    </description>
    <name>getTime</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getTime()</function-signature>
    <example>
      {fn:getTime()}
    </example>  
  </function>
  <function>
    <description>
    截取字符，oldStr --原始字符   wI(0,1)--0从前往后截,1相反     num--截取几位
    </description>
    <name>getSubString</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getSubString(java.lang.String,int,int)</function-signature>
    <example>
      {fn:getSubString('123456',0,3)}
    </example>  
  </function>
  <function>
    <description>
    根据BO对象获取列表,主要用来填充select
    </description>
    <name>getSelect</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.util.List getSelect(java.lang.String,java.lang.String)</function-signature>
    <example>
      ${fn:getSelect('ems.db.bo.BO_SZmoney',"")}
    </example>  
  </function>  
  <function>
    <description>
	返回两个日期的差额
    </description>
    <name>dateDiff</name>
    <function-class>ems.dll.EmsDate</function-class>
    <function-signature>java.lang.Long dateDiff(boolean,java.lang.String,java.lang.String,int)</function-signature>
    <example>
      ${fn:dateDiff(true,'2008-8-8 00:00:00','2009-9-9 00:00:00',1)}
      ${fn:dateDiff(false,'2008-8-8','2009-9-9',1)}
    </example>  
  </function>
   <function>
    <description>
     处理小数点     
    </description>
    <name>formatPoint</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.Double formatPoint(java.lang.Double,int)</function-signature>
    <example>
      {fn:formatPoint(10.123456,2)}
    </example>  
  </function>
   <function>
    <description>
     获取公司信息     
    </description>
    <name>getCompanyInfo</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getCompanyInfo(java.lang.String)</function-signature>
    <example>
      {fn:getCompanyInfo("companyName")}
    </example>  
  </function>
  <function>
    <description>
      get next Date
    </description>
    <name>getNextDay</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String getNextDay(java.lang.String)</function-signature>
    <example>
      Today is : ${fn.getNextDay('2009-12-20')}
    </example>  
  </function>
  
    <function>
    <description>
      Date add
    </description>
    <name>dateAdd</name>
    <function-class>ems.dll.Function</function-class>
    <function-signature>java.lang.String dateAdd(java.lang.String,java.lang.String,long,boolean)</function-signature>
    <example>
      Today is : ${fn.dateAdd('2009-12-20','DD',3,true)}
    </example>  
  </function>
</taglib>